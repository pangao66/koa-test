{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import express from \"express\";\nimport { Configuration, OpenAIApi } from \"openai-edge\";\nimport { OpenAIStream, streamToResponse } from \"ai\";\nconst app = express();\nconst router = express.Router();\nexport const runtime = \"edge\";\nconst config = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\napp.use(express.static(\"public\"));\napp.use(express.json());\n\napp.all(\"*\", (_, res, next) => {\n  // res.header(\"Access-Control-Allow-Origin\", \"*\");\n  // res.header(\"Access-Control-Allow-Headers\", \"authorization, Content-Type\");\n  // res.header(\"Access-Control-Allow-Methods\", \"*\");\n  next();\n});\nconst openai = new OpenAIApi(config);\nrouter.post(\"/chat-process\", [], async (req, res) => {\n  res.setHeader(\"Content-type\", \"application/octet-stream\");\n\n  const aiResponse = await openai.createChatCompletion({\n    model: \"gpt-3.5-turbo-16k-0613\",\n    // model: \"gpt-4-0613\",\n    stream: true,\n    messages: [{ role: \"user\", content: \"What is love?\" }],\n  });\n\n  // Transform the response into a readable stream\n  const stream = OpenAIStream(aiResponse);\n\n  // Pipe the stream to the response\n  streamToResponse(stream, res);\n});\n// const server = createServer(async (req, res) => {\n//   const aiResponse = await openai.createChatCompletion({\n//     model: 'gpt-3.5-turbo-16k-0613',\n//     stream: true,\n//     messages: [{ role: 'user', content: 'What is love?' }]\n//   })\n//\n//   // Transform the response into a readable stream\n//   const stream = OpenAIStream(aiResponse)\n//\n//   // Pipe the stream to the response\n//   streamToResponse(stream, res)\n// })\n//\n// server.listen(3000)\napp.use('', router)\napp.use('/api', router)\napp.set('trust proxy', 1)\n\napp.listen(3002, () => globalThis.console.log('Server is running on port 3002'))\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,SAAS,eAAe,iBAAiB;AACzC,SAAS,cAAc,wBAAwB;AAC/C,IAAM,MAAM,QAAQ;AACpB,IAAM,SAAS,QAAQ,OAAO;AACvB,IAAM,UAAU;AACvB,IAAM,SAAS,IAAI,cAAc;AAAA,EAC/B,QAAQ,QAAQ,IAAI;AACtB,CAAC;AACD,IAAI,IAAI,QAAQ,OAAO,QAAQ,CAAC;AAChC,IAAI,IAAI,QAAQ,KAAK,CAAC;AAEtB,IAAI,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS;AAI7B,OAAK;AACP,CAAC;AACD,IAAM,SAAS,IAAI,UAAU,MAAM;AACnC,OAAO,KAAK,iBAAiB,CAAC,GAAG,OAAO,KAAK,QAAQ;AACnD,MAAI,UAAU,gBAAgB,0BAA0B;AAExD,QAAM,aAAa,MAAM,OAAO,qBAAqB;AAAA,IACnD,OAAO;AAAA;AAAA,IAEP,QAAQ;AAAA,IACR,UAAU,CAAC,EAAE,MAAM,QAAQ,SAAS,gBAAgB,CAAC;AAAA,EACvD,CAAC;AAGD,QAAM,SAAS,aAAa,UAAU;AAGtC,mBAAiB,QAAQ,GAAG;AAC9B,CAAC;AAgBD,IAAI,IAAI,IAAI,MAAM;AAClB,IAAI,IAAI,QAAQ,MAAM;AACtB,IAAI,IAAI,eAAe,CAAC;AAExB,IAAI,OAAO,MAAM,MAAM,WAAW,QAAQ,IAAI,gCAAgC,CAAC;","names":[]}